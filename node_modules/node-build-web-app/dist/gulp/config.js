"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _utils = require("./utils");

var _utils2 = _interopRequireDefault(_utils);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var extensions = {
    javascript: ".js",
    typescript: ".ts",
    css: ".css",
    sass: ".scss",
    html: ".html",
    sourcemap: ".map",
    png: ".png",
    jpg: ".jpg",
    jpeg: ".jpeg",
    gif: ".gif",
    svg: ".svg"
};

var folders = {
    root: ".",
    dist: "./dist",
    temp: "./.tmp",
    app: "./app",
    styles: "./styles",
    scripts: "./scripts",
    images: "./images",
    typings: "./typings",
    nodeModules: "./node_modules",
    jspmPackages: "./jspm_packages"
};

var globs = {
    any: "/**/*",
    scripts: {
        javascript: "/**/*" + extensions.javascript,
        typescript: "/**/*" + extensions.typescript
    },
    styles: {
        css: "/**/*" + extensions.css,
        sass: "/**/*" + extensions.sass,
        vendor: _path2.default.join(folders.styles, "/vendor" + "{" + extensions.sass + "," + extensions.css + "}")
    },
    images: _path2.default.join(folders.images, "/**/*" + "{" + extensions.png + "," + extensions.jpg + "," + extensions.jpeg + "," + extensions.gif + "," + extensions.svg + "}"),
    html: "/**/*" + extensions.html,
    sourcemaps: "/**/*" + extensions.sourcemap
};

var files = {
    any: "*",
    packageJSON: _path2.default.join(folders.root, "/package.json"),
    typeScriptDefinitions: _path2.default.join(folders.typings, globs.scripts.typescript),
    systemjsConfigDefault: "jspm.conf.js"
};

var webServerFolders = {
    dev: [folders.root, folders.temp, folders.app],
    dist: [folders.dist]
};

var webServerNames = {
    dev: "MDW_DEV",
    dist: "MDW_DIST"
};

var finalJsBundleName = "bundle.min.js";

var javascript = {
    src: [_path2.default.join(folders.app, globs.scripts.javascript)],
    srcDist: _path2.default.join(folders.temp, "/core/boot.js"),
    dest: folders.temp,
    destDist: _path2.default.join(folders.dist, "/" + finalJsBundleName),
    finalJsBundlePath: finalJsBundleName
};

var typescript = {
    srcAppOnly: [_path2.default.join(folders.app, globs.scripts.typescript)],
    dest: folders.temp };

var finalCSSBundleName = "bundle.min.css";
var finalCSSVendorBundleName = "vendor.min.css";

var styles = {
    src: [_path2.default.join(folders.app, globs.styles.css), _path2.default.join(folders.app, globs.styles.sass)],
    srcVendorOnly: [_path2.default.join(folders.app, globs.styles.vendor)],
    srcWithoutVendor: [_path2.default.join(folders.app, globs.styles.css), _path2.default.join(folders.app, globs.styles.sass), _utils2.default.exclude(_path2.default.join(folders.app, globs.styles.vendor))],
    dest: folders.temp,
    destFiles: _path2.default.join(folders.temp, globs.styles.css),
    destDist: folders.dist,
    finalCssBundleFilename: finalCSSBundleName,
    finalCssBundlePath: finalCSSBundleName,
    finalVendorCssBundleFilename: finalCSSVendorBundleName,
    finalVendorCssBundlePath: finalCSSVendorBundleName
};

var images = {
    src: [_path2.default.join(folders.app, globs.images)],
    dest: _path2.default.join(folders.dist, folders.images)
};

var html = {
    src: [_path2.default.join(folders.app, globs.html)],
    dest: folders.dist
};

var copy = {
    src: [_path2.default.join(folders.app, globs.any), _utils2.default.exclude(_path2.default.join(folders.app, globs.html)), _utils2.default.exclude(_path2.default.join(folders.app, globs.styles.css)), _utils2.default.exclude(_path2.default.join(folders.app, globs.styles.sass)), _utils2.default.exclude(_path2.default.join(folders.app, globs.scripts.javascript)), _utils2.default.exclude(_path2.default.join(folders.app, globs.scripts.typescript))],
    dest: folders.dist
};

var autoprefixerBrowsers = ["ie >= 10", "ie_mob >= 10", "ff >= 30", "chrome >= 34", "safari >= 7", "opera >= 23", "ios >= 7", "android >= 4.4", "bb >= 10"];

var minifyCss = {
    keepBreaks: false,
    keepSpecialComments: true,
    compatibility: false,
    aggressiveMerging: false };

exports.default = {
    extensions: extensions,
    folders: folders,
    globs: globs,
    files: files,
    javascript: javascript,
    typescript: typescript,
    styles: styles,
    images: images,
    html: html,
    copy: copy,
    autoprefixerBrowsers: autoprefixerBrowsers,
    minifyCss: minifyCss,
    webServerFolders: webServerFolders,
    webServerNames: webServerNames
};